@model PaginatedList<ShoppingSystem.Models.Entity.SupermarketModel>

@{
    ViewData["Title"] = "Supermarkets View";
}

<h1 class="display-4 mb-4">Supermarkets</h1>

<div class="container">
    <div class="row align-items-center">
        <div class="col-sm-6">
            <span class="my-2"><a asp-action="Create">Create New</a></span>
        </div>
        <div class="col-sm-6 justify-content-end">
            <form asp-action="Index" autocomplete="off" method="get" class="form-inline">
                <div class="form-actions no-color">
                    <p>
                        <input type="text" class="form-control form-control-sm mr-2" name="SearchString"
                               value="@ViewData["CurrentFilter"]" placeholder="Search by name" />
                        <input type="submit" value="Search" class="btn btn-sm btn-outline-warning border-0" />&nbsp;|&nbsp;
                        <a asp-action="Index" class="btn btn-sm btn-outline-warning border-0" role="button">Back to Full List</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", "Supermarkets", new
                {
                    sortOrder = ViewData["NameSortParm"],
                    currentFilter = ViewData["CurrentFilter"]
                })
            </th>
            <th>
                @Html.DisplayName("Address")
            </th>
            <th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="Supermarkets navigation">
    <ul class="pagination pagination-sm justify-content-center">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true">&laquo;Previous</span>
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link" aria-label="Next">
                <span aria-hidden="true">Next&raquo;</span>
            </a>
        </li>
    </ul>
</nav>